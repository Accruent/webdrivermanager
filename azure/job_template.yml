parameters:
  name: 'webdrivermanager'
  vmImage: ''

jobs:
- job: ${{Â parameters.name }}
  variables:
  - group: lintly
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 25
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python27:
        os_name:  ${{ parameters.name }}
        python_version: '2.7'
      Python37:
        os_name:  ${{ parameters.name }}
        python_version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    displayName: 'Python for test execution'
    inputs:
      versionSpec: $(python_version)
      addToPath: true
      architecture: 'x64'

  - bash: |
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip install -r requirements-dev.txt
    displayName: 'Install requirements'

  - bash: python test/test_acceptance.py
    displayName: 'Running Acceptance Tests'
    continueOnError: true

  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: acceptance_tests.xml
      testResultsTitle: Acceptance Results for $(os_name) with Python $(python_version)
      testRunTitle: Python-$(python_version)-$(os_name)-acceptance
      publishRunAttachments: true


  - bash: |
      flake8 --exit-zero --output flake8.xml --format=junit-xml
    displayName: 'Running Flake8 Static Analysis'
    continueOnError: true
    condition: eq(variables['os_name'], 'OSX')

  - bash: |
      set
      env
      flake8 --exit-zero | lintly --format=flake8 --log --post-status --pr $(System.PullRequest.PullRequestNumber) --commit-sha $(Build.SourceVersion) || true
    displayName: 'Uploading Flake8 results to pull request'
    continueOnError: true
    condition: and(eq(variables['os_name'], 'OSX'), eq(variables['Build.Reason'],'PullRequest'))
    env:
      LINTLY_API_KEY: $(LINTLY_API_KEY)
      LINTLY_REPO: $(LINTLY_REPO)

  - bash: |
      pylint webdrivermanager/ test/ --exit-zero --output-format=json|lintly --format=pylint-json --log --post-status --pr $(System.PullRequest.PullRequestNumber) --commit-sha $(Build.SourceVersion) || true
    displayName: 'Uploading Pylint results to pull request'
    continueOnError: true
    condition: and(and(eq(variables['os_name'], 'OSX'), eq(variables['Build.Reason'],'PullRequest')), ne(variables['python_version'],'2.7'))
    env:
      LINTLY_API_KEY: $(LINTLY_API_KEY)
      LINTLY_REPO: $(LINTLY_REPO)
  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: flake8.xml
      testResultsTitle: Flake8 Results for $(os_name) with Python $(python_version)
      testRunTitle: Python-$(python_version)-$(os_name)-flake8
    condition: eq(variables['os_name'], 'OSX')

  - bash: |
      pylint webdrivermanager/ test/ --exit-zero --output-format=junit > pylint.xml
    displayName: 'Running Pylint Static Analysis'
    continueOnError: true
    condition: and(eq(variables['os_name'], 'OSX'), ne(variables['python_version'],'2.7'))

  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: pylint.xml
      testResultsTitle: PyLint Results for $(os_name) with Python $(python_version)
      testRunTitle: Python-$(python_version)-$(os_name)-pylint
      publishRunAttachments: true
    condition: and(eq(variables['os_name'], 'OSX'), ne(variables['python_version'],'2.7'))

  - bash: python setup.py sdist
    displayName: 'Generate sdist files'
